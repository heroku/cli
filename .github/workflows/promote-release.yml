name: Promote Release

on:
  workflow_call:
    inputs:
      version:
        description: version to promote to latest
        type: string
        required: true
      channel:
        description: dev, beta or stable release
        type: string
        required: true

  workflow_dispatch:
    inputs:
      version:
        description: version to promote to latest
        type: string
        required: true
      channel:
        description: dev, beta or stable release
        type: string
        required: true
      commitSHA:
        description: 1st 7 chars of release commit SHA (heroku-cli-assets/versions/v:VERSION/:THIS in S3)
        type: string
        required: false

jobs:
  promote:
    name: Promote ${{ inputs.version }} to ${{ inputs.channel }}
    runs-on: ubuntu-latest
    environment: CLIS3BucketAndCloudfront
    env:
      CLOUDFRONT_DISTRIBUTION: ${{ secrets.CLOUDFRONT_DISTRIBUTION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_EC2_METADATA_DISABLED: true
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn
      - run: yarn --frozen-lockfile --network-timeout 1000000
      - name: install AWS cli
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
      - name: promote
        run: |
          shortSHA=${{ inputs.commitSHA }}
          if [ -z $shortSHA ]; then
            shortSHA=`git rev-parse --short=7 HEAD`
          fi
          yarn oclif promote --deb --xz --root="./packages/cli" --indexes --version=${{ inputs.version }} --sha=$shortSHA --channel=${{ inputs.channel }}
      - name: promote Linux install scripts
        run: node ./scripts/postrelease/install_scripts.js

  ## POST release jobs
  invalidate-cdn-cache:
    needs: [ promote ]
    runs-on: ubuntu-latest
    environment: CLIS3BucketAndCloudfront
    env:
      CLOUDFRONT_DISTRIBUTION: ${{ secrets.CLOUDFRONT_DISTRIBUTION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_EC2_METADATA_DISABLED: true
    steps:
      - uses: actions/checkout@v3
      - run: |
          sudo apt-get update
          sudo apt-get install -y awscli
          aws configure set preview.cloudfront true
      - run: ./scripts/postrelease/invalidate_cdn_cache

  release-homebrew:
    needs: [ promote ]
    if: startsWith(github.head_ref, 'release-' )
    runs-on: ubuntu-latest
    environment: ReleaseHomebrew
    steps:
      - uses: actions/checkout@v3
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: actions/download-artifact@v3
        with:
          name: all-dist
          path: /home/runner/work/cli/cli/packages/cli/dist
      - name: List all the downloaded files (for debugging)
        run: ls -R
        working-directory: /home/runner/work/cli/cli/packages/cli/dist
      - run: |
          cp yarn.lock packages/cli
          cd packages/cli
          yarn --frozen-lockfile --network-timeout 1000000
          ./scripts/release/homebrew.js

  change-management:
    needs: [ promote ]
    if: startsWith(github.head_ref, 'release-' )
    runs-on: ubuntu-latest
    environment: ChangeManagement
    env:
      TPS_API_APP_ID: ${{ secrets.TPS_API_APP_ID }}
      TPS_API_RELEASE_ACTOR_EMAIL: ${{ secrets.TPS_API_RELEASE_ACTOR_EMAIL }}
      TPS_API_STAGE: ${{ secrets.TPS_API_STAGE }}
      TPS_API_TOKEN_PARAM: ${{ secrets.TPS_API_TOKEN_PARAM }}
      TPS_API_URL_PARAM: ${{ secrets.TPS_API_URL_PARAM }}
    steps:
      - uses: actions/checkout@v3
      - run: |
          yarn --frozen-lockfile --network-timeout 1000000
          ./scripts/postrelease/change_management
