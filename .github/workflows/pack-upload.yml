name: Pack and Upload

on:
  workflow_dispatch:
  workflow_call:

jobs:
  pack_deb:
    runs-on: ubuntu-latest
    env:
      HEROKU_AUTHOR: 'Heroku'
    steps:
      - uses: actions/checkout@v4
      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y nsis p7zip-full
      - run: sudo mkdir -p /build
      - name: Install package deps
        run: npm ci
      - name: Create npm-shrinkwrap.json for oclif pack:deb
        run: cd packages/cli && npm run create-shrinkwrap
      - name: Building deb
        run: npm run pack:deb
      - uses: actions/upload-artifact@v4
        with:
          name: packed-deb
          path: /home/runner/work/cli/cli/packages/cli/dist

  pack_tarballs:
    runs-on: pub-hk-ubuntu-22.04-2xlarge
    steps:
      - uses: actions/checkout@v4
      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y nsis p7zip-full
      - run: sudo mkdir -p /build
      - name: Install package deps
        run: npm ci
      - name: Create npm-shrinkwrap.json for oclif pack:tarballs
        run: cd packages/cli && npm run create-shrinkwrap
      - name: Building tarballs
        run: npm run pack:tarballs
      - uses: actions/upload-artifact@v4
        with:
          name: packed-tarballs
          path: /home/runner/work/cli/cli/packages/cli/dist

  sign_deb:
    needs: [pack_deb]
    runs-on: ubuntu-latest
    environment: SignDebian
    env:
      HEROKU_DEB_SECRET_KEY: ${{ secrets.HEROKU_DEB_SECRET_KEY }}
      HEROKU_DEB_SIGNING_PASSWORD: ${{ secrets.HEROKU_DEB_SIGNING_PASSWORD }}
      HEROKU_DEB_KEY_ID: ${{ secrets.HEROKU_DEB_KEY_ID }}
      HEROKU_DEB_PUBLIC_KEY: ${{ secrets.HEROKU_DEB_PUBLIC_KEY }}
    steps:
      - uses: actions/checkout@v4
      - run: sudo mkdir -p /build
      - uses: actions/download-artifact@v4
        with:
          name: packed-deb
          path: /home/runner/work/cli/cli/packages/cli/dist
      - run: |
          cd /home/runner/work/cli/cli/packages/cli/dist/deb
          /home/runner/work/cli/cli/packages/cli/scripts/sign/deb
      - uses: actions/upload-artifact@v4
        with:
          name: signed-deb
          path: /home/runner/work/cli/cli/packages/cli/dist


  upload-deb-and-tarballs:
    needs: [sign_deb, pack_tarballs]
    runs-on: ubuntu-latest
    env:
      CLOUDFRONT_DISTRIBUTION: ${{ secrets.CLOUDFRONT_DISTRIBUTION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_EC2_METADATA_DISABLED: true
    steps:
      - uses: actions/checkout@v4
      - run: sudo mkdir -p /build
      - uses: actions/download-artifact@v4
        with:
          name: signed-deb
          path: /home/runner/work/cli/cli/packages/cli/dist

      - uses: actions/download-artifact@v4
        with:
          name: packed-tarballs
          path: /home/runner/work/cli/cli/packages/cli/dist
      - name: List all the downloaded files (for debugging)
        run: ls -R
        working-directory: /home/runner/work/cli/cli/packages/cli/dist
      - name: Install dependencies
        run: npm ci
      - name: Upload production artifacts
        run: |
          pwd
          npm run upload:tarballs
          cd packages/cli
          ./scripts/upload/deb
