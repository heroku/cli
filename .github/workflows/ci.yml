name: Tests

on:
  [push, workflow_dispatch]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [16.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - run: yarn --immutable --network-timeout 1000000
      - name: unit tests
        run: yarn test
      - name: linting
        run: yarn lint

  integration:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [16.x]
        os: [ubuntu-latest]
    environment: AcceptanceTests
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      ENABLE_NET_CONNECT: true
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - run: yarn --immutable --network-timeout 1500000
      - name: Run cli package integration tests
        run: |
          cd packages/cli
          yarn test:integration

  acceptance:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [16.x]
        os: [ubuntu-latest]
    environment: AcceptanceTests
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      ENABLE_NET_CONNECT: true
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - run: yarn --immutable --network-timeout 1000000
        # on 'main' and 'release-' branches, these tests will be run as part of the acceptance tests.
      - name: run smoke tests
        if: github.ref_name != 'main' || !startsWith(github.ref_name, 'release-')
        run: cd packages/cli && yarn test:smoke
        # only run the full suite of acceptance tests on 'main' and 'release-' branches
      - name: run acceptance tests
        if: github.ref_name == 'main' || startsWith(github.ref_name, 'release-')
        run: cd packages/cli && yarn test:acceptance

  spell-check:
    name: Check Spelling
    permissions:
      contents: read
      actions: read
    outputs:
      followup: ${{ steps.spelling.outputs.followup }}
    runs-on: ubuntu-latest
    if: ${{ contains(github.event_name, 'pull_request') || github.event_name == 'push' }}
    concurrency:
      group: spelling-${{ github.event.pull_request.number || github.ref }}
      # note: If you use only_check_changed_files, you do not want cancel-in-progress
      cancel-in-progress: true
    steps:
      - name: Check Spelling
        id: spelling
        uses: check-spelling/check-spelling@v0.0.22
        with: 
          suppress_push_for_open_pull_request: ${{ github.actor != 'dependabot[bot]' && 1 }}
          checkout: true
          check_file_names: 1
          spell_check_this: check-spelling/spell-check-this@prerelease
          post_comment: 0
          use_magic_file: 1
          report-timing: 1
          warnings: bad-regex,binary-file,deprecated-feature,large-file,limited-references,no-newline-at-eof,noisy-file,non-alpha-in-dictionary,token-is-substring,unexpected-line-ending,whitespace-in-dictionary,minified-file,unsupported-configuration,no-files-to-check
          extra_dictionary_limit: 20
          extra_dictionaries:
            cspell:software-terms/dict/softwareTerms.txt  

  # dummy job needed to pass changeling compliance because it only watches one build
  done:
    runs-on: macos-latest
    needs: [test, integration, acceptance]
    steps:
      - run: echo done
        working-directory: /
