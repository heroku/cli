---
machine:
  environment:
    CACHE_DIR: ~/deps
    WORKSPACE: ~/workspace/heroku
    NPM_REGISTRY: https://cli-npm.heroku.com
    JOBZ: 6
  post:
    - sudo rm -rf /usr/local/go
    - if [ ! -e ~/deps/go1.7.5.linux-amd64.tar.gz ]; then mkdir -p ~/deps && wget -O ~/deps/go1.7.5.linux-amd64.tar.gz https://storage.googleapis.com/golang/go1.7.5.linux-amd64.tar.gz; fi
    - sudo tar -C /usr/local -xzf ~/deps/go1.7.5.linux-amd64.tar.gz
checkout:
  post:
    - |
      rm -rf ~/.go_workspace/src/github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME &&
      mkdir -p ~/.go_workspace/src/github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME &&
      cp -R ~/$CIRCLE_PROJECT_REPONAME ~/.go_workspace/src/github.com/$CIRCLE_PROJECT_USERNAME/ &&
      rm -rf ~/$CIRCLE_PROJECT_REPONAME &&
      ln -s ~/.go_workspace/src/github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME ~/$CIRCLE_PROJECT_REPONAME &&
      mkdir -p $CIRCLE_TEST_REPORTS/go
dependencies:
  cache_directories:
    - ~/deps
    - ~/osslsigncode
    - ~/workspace
    - ~/.cache/heroku/npm
  override:
    - sudo apt-get install scons g++-multilib
    - >
      if [ ! -d /home/ubuntu/nsis-2.51 ]; then
        mkdir /home/ubuntu/nsis-2.51 &&
        wget https://downloads.sourceforge.net/project/nsis/NSIS%202/2.51/nsis-2.51-src.tar.bz2 &&
        tar xvfj nsis-2.51-src.tar.bz2 &&
        patch -i makensis.patch -p1 &&
        mv nsis-2.51-src /home/ubuntu/nsis-2.51/src &&
        wget https://downloads.sourceforge.net/project/nsis/NSIS%202/2.51/nsis-2.51.zip &&
        unzip nsis-2.51
        mv nsis-2.51 /home/ubuntu/nsis-2.51/zip &&
        cd /home/ubuntu/nsis-2.51/src &&
        scons SKIPSTUBS=all SKIPPLUGINS=all SKIPUTILS=all SKIPMISC=all NSIS_CONFIG_CONST_DATA_PATH=no PREFIX=/home/ubuntu/nsis-2.51/zip install-compiler &&
        ls /home/ubuntu/nsis-2.51/zip/makensis
      fi &&
      export PATH=/home/ubuntu/nsis-2.51/zip:$PATH  
    - >
      go version &&
      if ! type gometalinter >/dev/null 2>&1; then go get -v github.com/alecthomas/gometalinter && gometalinter --install; fi &&
      if [ ! -d ~/osslsigncode ]; then
        wget https://cli-assets.heroku.com/osslsigncode-1.7.1.tar.gz &&
        tar -xvzf osslsigncode-1.7.1.tar.gz &&
        mv osslsigncode-1.7.1 ~/osslsigncode &&
        cd ~/osslsigncode && ./configure && make
      fi &&
      cd ~/osslsigncode && sudo make install
    - make deps build -j $JOBZ
    - sudo apt-get update
    - sudo apt-get install cowsay jq

test:
  override:
    - ./bin/test -v -race -cover -coverprofile=coverage.out -ginkgo.v
    - make test -j $JOBZ
    - ./bin/lint
  post:
    - bash <(curl -s https://codecov.io/bash)
deployment:
  dev:
    branch: dev
    owner: heroku
    commands:
      - gpg --passphrase $HEROKU_WINDOWS_SIGNING_PASS -d resources/deb/key.gpg | gpg --import
      - CHANNEL=dev make release -j $JOBZ
  beta:
    branch: master
    owner: heroku
    commands:
      - gpg --passphrase $HEROKU_WINDOWS_SIGNING_PASS -d resources/deb/key.gpg | gpg --import
      - CHANNEL=beta make release -j $JOBZ
  stable:
    tag: /v[0-9]+(\.[0-9]+)*/
    owner: heroku
    commands:
      - gpg --passphrase $HEROKU_WINDOWS_SIGNING_PASS -d resources/deb/key.gpg | gpg --import
      - CHANNEL=stable make release -j $JOBZ
