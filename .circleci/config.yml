---
defaults: &defaults
  working_directory: /cli
  docker:
    - image: node:9
      environment: &env
        NPM_CONFIG_REGISTRY: https://cli-npm.heroku.com
        LANG: en_US.UTF-8
        LANGUAGE: en_US.UTF-8
        LC_TYPE: en_US.UTF-8

version: 2
executorType: docker
jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: &yarn_restore_cache
          keys:
            - v1-yarn-{{ checksum ".circleci/config.yml" }}-{{ checksum "yarn.lock" }}
            - v1-yarn-{{ checksum ".circleci/config.yml" }}
            - v1-yarn
      - run: ./.circleci/setup_git
      - run: ./.circleci/setup_deps
      - run: yarn global add greenkeeper-lockfile@1 && greenkeeper-lockfile-update
      - run: yarn
      - run: yarn link
        # TODO: get rid of this later
      - run: mkdir -p ~/.cache/heroku
      - run: yarn test
      - run: greenkeeper-lockfile-upload
      - run: curl -s https://codecov.io/bash | bash
      - save_cache:
          key: v1-yarn-{{ checksum ".circleci/config.yml" }}-{{ checksum "yarn.lock" }}
          paths:
            - /cli/node_modules
            - /usr/local/share/.cache/yarn
  build_os_darwin:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *yarn_restore_cache
      - restore_cache: {keys: [node-v9.3.0-darwin]}
      - run: yarn
      - run: ./scripts/build/base
      - run: ./scripts/build/workspace
      - run: ./scripts/build/tarballs
      - persist_to_workspace: &dist
          root: dist
          paths: [ . ]
      - save_cache: &node_cache_save
          key: node-v9.3.0-darwin
          paths: [/cli/tmp/cache/node]
  build_os_linux:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *yarn_restore_cache
      - restore_cache: {keys: [node-v9.3.0-linux]}
      - run: yarn
      - run: ./scripts/build/base
      - run: ./scripts/build/workspace
      - run: ./scripts/build/tarballs
      - persist_to_workspace: *dist
      - save_cache:
          <<: *node_cache_save
          key: node-v9.3.0-linux
  build_os_win32:
    <<: *defaults
    docker: &win32_docker
      - image: dickeyxxx/cli-engine-docker-nsis:v3.1.2
        environment: *env
    steps:
      - checkout
      - restore_cache: *yarn_restore_cache
      - restore_cache: {keys: [node-v9.3.0-win32]}
      - run: yarn
      - run: ./scripts/build/base
      - run: ./scripts/build/workspace
      - run: ./scripts/build/tarballs
      - persist_to_workspace: *dist
      - save_cache:
          <<: *node_cache_save
          key: node-v9.3.0-win32
  release:
    <<: *defaults
    docker: &release_docker
      - image: dickeyxxx/cli-engine-docker:v3.0.9
        environment: *env
    steps:
      - add_ssh_keys
      - checkout
      - attach_workspace: {at: dist}
      - run: {command: "ls dist", when: always}
      - run: {command: "./scripts/release/_github_setup", when: always}
      - run: {command: "./scripts/release/homebrew", when: always}
      - run: {command: "./scripts/release/upload_dist", when: always}
      - run: {command: "./scripts/release/macos_installer_trigger", when: always}
      - run: {command: "./scripts/release/invalidate_cdn", when: always}
  build_and_release_deb:
    <<: *defaults
    docker: *release_docker
    steps:
      - checkout
      - attach_workspace: {at: dist}
      - run: ./scripts/build/deb
      - run: ls dist/apt
      - run: ./scripts/release/deb
  build_and_release_win_inst:
    <<: *defaults
    docker: *win32_docker
    steps:
      - checkout
      - attach_workspace: {at: dist}
      - run: ./scripts/build/win32
      - run: ls dist
      - run: ./scripts/release/win32
  dev_center_docs:
    docker: &devdocs_docker
      - image: rasphilco/cli-engine-devcenter:v0.1.0
        environment:
          NPM_CONFIG_REGISTRY: https://cli-npm.heroku.com
          LANG: en_US.UTF-8
          LANGUAGE: en_US.UTF-8
          LC_TYPE: en_US.UTF-8
          LC_ALL: C.UTF-8
    steps:
      - type: checkout
      - run: ./scripts/release/dev_center_docs
      - store_artifacts:
          path: /tmp/heroku-cli-commands-test.md
workflows:
  version: 2
  heroku_cli:
    jobs:
      - test:
          filters: &all_pushes
            tags: &version_tags
              only: /^v.*/
      - build_os_darwin: &release
          filters:
            tags: *version_tags
            branches:
              only:
                - master
                - dev
      - build_os_linux: *release
      - build_os_win32: *release
      - build_and_release_win_inst:
          <<: *release
          requires:
            - test
            - build_os_win32
      - build_and_release_deb:
          <<: *release
          requires:
            - test
            - build_os_linux
      - release:
          <<: *release
          requires:
            - test
            - build_os_darwin
            - build_os_linux
            - build_os_win32
      - dev_center_docs:
          requires:
            - test
            - build_os_darwin
            - build_os_linux
            - build_os_win32
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
