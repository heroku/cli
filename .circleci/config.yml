---
defaults: &defaults
  working_directory: /cli
  environment:
    HEROKU_AUTHOR: Heroku
  docker:
    - image: oclif/nsis:12.0.0-16
      environment: &env
        LANG: en_US.UTF-8
        LANGUAGE: en_US.UTF-8
        LC_TYPE: en_US.UTF-8
        NODE_OPTIONS: --max_old_space_size=4096 --unhandled-rejections=strict

version: 2.1
orbs:
  win: circleci/windows@2.4.0
executorType: docker
jobs:
  yarn:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: &yarn_restore_cache
          keys:
            - v4-yarn-{{ checksum ".circleci/config.yml" }}-{{ checksum "yarn.lock" }}
            - v4-yarn-{{ checksum ".circleci/config.yml" }}
            - v4-yarn
      - run: &yarn_install
          name: Installing dependencies
          command: yarn --frozen-lockfile
      - save_cache:
          key: v4-yarn-{{ checksum ".circleci/config.yml" }}-{{ checksum "yarn.lock" }}
          paths:
            - /cli/node_modules
            - /cli/tmp/cache
            - /usr/local/share/.cache/yarn
  acceptance-test:
    <<: *defaults
    docker:
      - image: "node:<<parameters.node-version>>"
        environment:
          <<: *env
          RUN_ACCEPTANCE_TESTS: true
    parameters:
      node-version:
        type: "string"
    steps:
      - checkout
      - restore_cache: *yarn_restore_cache
      - run: *yarn_install
      - run:
          name: heroku whoami
          command: ./bin/run whoami
      - run:
          name: Smoke tests CLI
          command: ./scripts/run-acceptance
  windows-test:
    executor:
      name: win/default
      size: xlarge
    steps:
      - checkout
      - run:
          name: Install latest yarn
          command: |
            (New-Object Net.WebClient).DownloadFile("https://yarnpkg.com/latest.msi", "$env:temp\yarn.msi")
            cmd /c start /wait msiexec.exe /i $env:temp\yarn.msi /quiet /qn /norestart /log install.log
      - run:
          name: Verify yarn installation
          command: |
            if (!(Test-Path -Path "C:\Program Files (x86)\Yarn\bin\yarn" -PathType Leaf)) {
              Write-Host "> Installation failed." -ForegroundColor Red
              Write-Host "" -ForegroundColor Red
              exit 1
            }
      - restore_cache:
          keys:
            - node-modules-v1-win-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          paths:
            - ./node_modules
          key: node-modules-v1-win-{{ checksum "yarn.lock" }}
      - run:
          name: Test and Lint
          command: yarn --cwd packages/addons-v5 test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/apps-v5 test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/apps test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/auth test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/autocomplete test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/buildpacks test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/certs-v5 test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/certs test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/ci-v5 test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/ci test
      # - run:
      #     name: Test and Lint
      #     command: yarn --cwd packages/cli test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/config test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/container-registry-v5 test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/git test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/local test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/oauth-v5 test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/oauth test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/orgs-v5 test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/pg-v5 test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/pipelines test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/ps test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/redis-v5 test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/run-v5 test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/run test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/spaces test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/status test
      - run:
          name: Test and Lint
          command: yarn --cwd packages/webhooks test
  node12-test: &test
    <<: *defaults
    docker:
      - image: node:12
    resource_class: xlarge
    steps:
      - checkout
      - restore_cache: &yarn_restore_cache
          keys:
            - v4-yarn-{{ checksum ".circleci/config.yml" }}-{{ checksum "yarn.lock" }}
            - v4-yarn-{{ checksum ".circleci/config.yml" }}
            - v4-yarn
      - run: *yarn_install
      - run:
          name: Installing dependencies
          command: yarn --frozen-lockfile
      - run:
          name: Running all tests
          command: yarn test
  node10-test:
    <<: *test
    docker:
      - image: node:10
    resource_class: xlarge
  node14-test:
    <<: *test
    docker:
      - image: node:14
    resource_class: xlarge
  pack-windows:
    <<: *defaults
    steps:
      - checkout
      - run: *yarn_install
      - restore_cache: *yarn_restore_cache
      - run: |
          mkdir -p /build
          cp yarn.lock packages/cli
          cd packages/cli
          yarn --frozen-lockfile
      - run:
          name: Building Windows binaries
          command: ./scripts/pack/win
      - persist_to_workspace:
          root: /cli/packages/cli
          paths:
            - dist
  pack-tarballs:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *yarn_restore_cache
      - run: *yarn_install
      - run: |
          mkdir -p /build
          cp yarn.lock packages/cli
          cd packages/cli
          yarn --frozen-lockfile
      - run:
          name: Building Tarballs
          command: ./scripts/pack/tarballs
      - persist_to_workspace:
          root: /cli/packages/cli
          paths:
            - dist
  pack-deb:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *yarn_restore_cache
      - run: *yarn_install
      - run: |
          mkdir -p /build
          cp yarn.lock packages/cli
          cd packages/cli
          yarn --frozen-lockfile
      - run:
          name: Building Deb package
          command: ./scripts/pack/deb
      - persist_to_workspace:
          root: /cli/packages/cli
          paths:
            - dist
  sign-deb:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /build
      - checkout
      - restore_cache: *yarn_restore_cache
      - run:
          name: "Signing debian"
          command: cd /build/dist/deb && /cli/scripts/sign/deb
      - persist_to_workspace:
          root: /build
          paths:
            - dist
  store-artifacts:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /build
      - checkout
      - restore_cache: *yarn_restore_cache
      - run:
          name: "Create SHA256 artifacts"
          command: ./scripts/hash-artifacts
      - store_artifacts:
          path: /build/dist
          destination: /
  release_deb_and_tarballs:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *yarn_restore_cache
      - run: *yarn_install
      - attach_workspace:
          at: /cli/packages/cli
      - run: |
          cp yarn.lock packages/cli
          cd packages/cli
          yarn --frozen-lockfile
          ./scripts/release/tarballs
          ./scripts/release/deb
          ./scripts/postrelease/install_scripts
  trigger_macos:
    <<: *defaults
    steps:
      - add_ssh_keys
      - checkout
      - run: yarn --frozen-lockfile
      - run: ./scripts/release/macos_installer_trigger
  release_homebrew:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /build
      - add_ssh_keys
      - checkout
      - run: |
          cp yarn.lock packages/cli
          cd packages/cli
          yarn --frozen-lockfile
          cp -r /build/dist /cli/packages/cli
          ./scripts/release/homebrew.js
  invalidate_cdn_cache:
    <<: *defaults
    steps:
      - checkout
      - run: yarn --frozen-lockfile
      - run: ./scripts/postrelease/invalidate_cdn_cache
  change_management:
    <<: *defaults
    steps:
      - checkout
      - run: |
          yarn --frozen-lockfile
          ./scripts/postrelease/change_management
  dev_center_docs:
    docker: &devdocs_docker
      - image: heroku/devcenter
        environment:
          LANG: en_US.UTF-8
          LANGUAGE: en_US.UTF-8
          LC_TYPE: en_US.UTF-8
          LC_ALL: C.UTF-8
    steps:
      - checkout
      - run: cd packages/cli && ./scripts/postrelease/dev_center_docs
      - store_artifacts:
          path: /tmp/heroku-cli-commands.md
workflows:
  version: 2.1
  heroku_cli:
    jobs:
      - yarn
      - windows-test: &windows_test
          requires:
            - yarn
      - node14-test: *windows_test
      - node12-test: *windows_test
      - node10-test: *windows_test
      - acceptance-test:
          context:
            - heroku-cli-acceptance-tests
          matrix:
            parameters:
              node-version:
                - "10"
                - "12"
                - "14"
          requires:
            - yarn
      - pack-windows:
          requires: &pack-requires
            - node14-test
            - node12-test
            - node10-test
            - windows-test
            - acceptance-test
      - pack-tarballs:
          requires: *pack-requires
      - pack-deb:
          requires: *pack-requires
      - sign-deb:
          context:
            - heroku-cli-sign-deb
          requires:
            - pack-deb
      - store-artifacts:
          requires:
            - pack-windows
            - pack-tarballs
            - sign-deb
      - release_deb_and_tarballs:
          context:
            - heroku-cli-s3
          requires:
            - sign-deb
            - pack-tarballs
          filters: &master_dev_and_version_tags
            tags:
              only: /^v.*/
            branches:
              only:
                - master
      # - release_homebrew:
      #     requires:
      #       - release_deb_and_tarballs
      #     filters: *master_dev_and_version_tags
      - invalidate_cdn_cache:
          requires:
            - release_deb_and_tarballs
          filters: *master_dev_and_version_tags
      # - change_management: &change_management
      #     context:
      #       - heroku-cli-tps
      #     requires:
      #       - release_deb_and_tarballs
      #     filters:
      #       <<: *only_version_tags
      # - dev_center_docs: *change_management
