#!/usr/bin/env bash

source ./scripts/_init

set -x

function build () {
  setarch "$ARCH"
  # setup workspace
  o="$WORKSPACE_DIR"
  rm -rf "${o}"
  cp -r "$BASE_DIR" "$o"

  "$ROOT_DIR/scripts/build/_fetch_node_binary" "${o}/bin"

  # create bin runner
  if [ "${OS}" == "win32" ]; then
    cat << EOF > "${o}/bin/heroku.cmd"
@echo off

if "%1" == "reset" (
  echo "Removing CLI data files and all plugins..."
  rd /s /q "%LOCALAPPDATA%\\heroku"
  exit /b
)

set HEROKU_CLI_BINPATH=%~dp0\\heroku.cmd
"%~dp0\\node.exe" "%~dp0\\heroku.js" %*
EOF
  else
    cat << EOF > "${o}/bin/heroku"
#!/usr/bin/env bash
set -e
get_script_dir () {
  SOURCE="\${BASH_SOURCE[0]}"
  # While \$SOURCE is a symlink, resolve it
  while [ -h "\$SOURCE" ]; do
    DIR="\$( cd -P "\$( dirname "\$SOURCE" )" && pwd )"
    SOURCE="\$( readlink "\$SOURCE" )"
    # If \$SOURCE was a relative symlink (so no "/" as prefix, need to resolve it relative to the symlink base directory
    [[ \$SOURCE != /* ]] && SOURCE="\$DIR/\$SOURCE"
  done
  DIR="\$( cd -P "\$( dirname "\$SOURCE" )" && pwd )"
  echo "\$DIR"
}
remove () {
  echo "rm -rf \$1"
  rm -rf "\$1"
}
DIR=\$(get_script_dir)
# normalize home directory
CLI_HOME=\$(cd && pwd)
XDG_DATA_HOME=\${XDG_DATA_HOME:="\$CLI_HOME/.local/share"}
CLIENT_DIR="\$XDG_DATA_HOME/heroku/client"
BIN_DIR="\$CLIENT_DIR/bin"
if [ "\$1" == "reset" ]; then
  echo "Removing CLI data files and all plugins..."
  remove "\${XDG_DATA_HOME}/heroku"
  exit
fi
if [ -x "\$BIN_DIR/heroku" ] && [[ "\$DIR" != "\$CLIENT_DIR"* ]]; then
  if [ "\$DEBUG" == "*" ]; then
    echo "\$XDG_DATA_HOME/heroku/client/bin/heroku" "\$@"
  fi
  "\$XDG_DATA_HOME/heroku/client/bin/heroku" "\$@"
else
  if [ "\$DEBUG" == "*" ]; then
    echo HEROKU_CLI_BINPATH="\$DIR/heroku" "\$DIR/node" "\$DIR/heroku.js" "\$@"
  fi
  HEROKU_CLI_BINPATH="\$DIR/heroku" "\$DIR/node" "\$DIR/heroku.js" "\$@"
fi
EOF
    chmod +x "${o}/bin/heroku"
  fi
}

for ARCH in "${ARCHS[@]}"; do
  bg build
done
wait_all
