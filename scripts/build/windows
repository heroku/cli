#!/usr/bin/env bash

set +x

OS=windows
echo "$HEROKU_WINDOWS_KEY" | base64 --decode > /tmp/heroku-windows-key

source ./scripts/_init

function build () {
  set -x
  # setup workspace
  INSTALLER_BASE=$TMP_DIR/windows-$ARCH-installer
  rm -rf "$INSTALLER_BASE"
  mkdir -p "$INSTALLER_BASE/bin"

  cp "$ROOT_DIR/resources/exe/heroku.cmd" "$INSTALLER_BASE/bin/heroku.cmd"
  cp "$ROOT_DIR/resources/exe/heroku" "$INSTALLER_BASE/bin/heroku"

  tar xzf "$TGZ_PATH"
  mv "$VERSIONED_BASE" "$INSTALLER_BASE/client"

  if [ "$ARCH" == "x64" ]; then
    PROGRAMSUFFIX="64"
  else
    PROGRAMSUFFIX=""
  fi

  sed -e "s/!define Version 'VERSION'/!define Version '${SHORT_VERSION}'/" resources/exe/heroku.nsi |\
    sed -e "s/InstallDir .*/InstallDir \"\$PROGRAMFILES$PROGRAMSUFFIX\\\Heroku\"/" \
    > "$INSTALLER_BASE/heroku.nsi"

  makensis "$INSTALLER_BASE/heroku.nsi" \
    | grep -v "\[compress\]" \
    | grep -v "^File: Descending to"

  set +x
  osslsigncode -pkcs12 /tmp/heroku-windows-key \
    -pass "$HEROKU_WINDOWS_SIGNING_PASS" \
    -n 'Heroku CLI' \
    -i https://toolbelt.heroku.com/ \
    -in "$INSTALLER_BASE/installer.exe" -out "$DIST_DIR/heroku-cli-$ARCH.exe"
}

for ARCH in "${ARCHS[@]}"; do
  setarch "$ARCH"
  bg build
done
wait_all
